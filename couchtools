#!/usr/local/bin/ruby
=begin
# Useful for assembing couchdb design documents
# @see http://books.couchdb.org/relax/design-documents/design-documents
=end

require 'couch_tools'

ACTIONS = {
  :"save-design-doc" => :save_design_doc,
  :"get-doc" => :get_doc
}

def usage_message
  <<EOS
#{$0}

Options: 

\t#{$0} save-design-doc \\
\t\tpath /path/on/fs \\
\t\turl http://url.of.the/db/_design/doc

\t#{$0} get-doc \\
\t\turl http://url.of.the/db/a/doc

EOS
end

def parse_args(argv)
  ret = {}

  ret[:action] = argv[0] && argv[0].to_sym

  argv.each do |arg|
    k,v = arg.split(/[=:\s]/,2)
    ret[k.to_sym] = v || k
  end
  ret
end

def main
  args = parse_args(ARGV)

  if args[:"-h"] 
    puts usage_message
    exit
  end

  action = ACTIONS[args[:action]]
  
  unless action
    puts "Unknown action: %s"%args[:action] #"]
    puts usage_message
    exit
  end

  self.__send__(action, args)
end

def save_design_doc(args)
  d = CouchTools::DesignDocument.new(args[:path], args[:url])
  d.save

  d.to_json
end

def get_doc(args)
  d = CouchTools::Document.new(args[:url])
  d.to_json
end

puts main
